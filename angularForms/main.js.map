{"version":3,"sources":["./src/app/components/model-driven/model-driven.component.ts","./src/app/components/model-driven/model-driven.component.html","./src/environments/environment.ts","./src/app/model/login.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/template-driven/template-driven.component.ts","./src/app/components/template-driven/template-driven.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-model-driven',\n  templateUrl: './model-driven.component.html',\n  styleUrls: ['./model-driven.component.css']\n})\nexport class ModelDrivenComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void { }\n\n  userDetails = this.formBuilder.group({\n    firstName: ['', Validators.required],\n    lastName: [''],\n    address: this.formBuilder.group({\n      landMark: [''],\n      state: [''],\n      city: [''],\n      pincode: ['']\n    }),\n    languagesKnown: this.formBuilder.array([\n      this.formBuilder.control('')\n    ])\n  });\n  get languagesKnown() {\n    return this.userDetails.get('languagesKnown') as FormArray;\n  }\n  updateValues() {\n    this.userDetails.patchValue({\n      firstName: 'Rohit',\n      address: {\n        landMark: 'Near my house'\n      }\n    })\n  }\n  addLang() {\n    this.languagesKnown.push(this.formBuilder.control(''));\n  }\n  onSubmit() {\n    console.log(this.userDetails.value);\n  }\n}","<div class=\"container\">\n    <br>\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">Reactive Form Or Model Driven Form</div>\n        <div class=\"panel-body\">\n            <form [formGroup]=\"userDetails\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"firstName\"> First Name </label>\n                    <input id=\"firstName\" type=\"text\" class=\"form-control\" formControlName=\"firstName\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"firstName\"> Last Name </label>\n                    <input id=\"firstName\" type=\"text\" class=\"form-control\" formControlName=\"lastName\" />\n                </div>\n                <div class=\"form-group\" formGroupName=\"address\">\n                    <label> Address</label>\n                </div>\n                <div class=\"form-group\" formGroupName=\"address\">\n                    <label> Land Mark</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"landMark\" />\n                </div>\n                <div class=\"form-group\" formGroupName=\"address\">\n                    <label> City</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"city\" />\n                </div>\n                <div class=\"form-group\" formGroupName=\"address\">\n                    <label> State</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"state\" />\n                </div>\n                <div class=\"form-group\" formGroupName=\"address\">\n                    <label> Pincode</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"pincode\" />\n                </div>\n                <div formArrayName=\"languagesKnown\">\n                    <div class=\"form-group\" *ngFor=\"let lang of languagesKnown.controls; let i=index\">\n                        <label> Language</label>\n                        <input type=\"text\" class=\"form-control\" [formControlName]=\"i\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <button (click)=\"addLang()\" class=\"btn btn-default\">Add More Languges</button>\n                    </div>\n                </div>\n                <div class=\"form-group\" formGroupName=\"address\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    {{userDetails.value | json}}\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Login {\n    constructor(\n        public userName : string,\n        public password : string,\n        public userType : string\n    ){}\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularForms';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateDrivenComponent } from './components/template-driven/template-driven.component';\nimport { ModelDrivenComponent } from './components/model-driven/model-driven.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateDrivenComponent,\n    ModelDrivenComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Login } from '../../model/login';\n\n@Component({\n  selector: 'app-template-driven',\n  templateUrl: './template-driven.component.html',\n  styleUrls: ['./template-driven.component.css']\n})\nexport class TemplateDrivenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  model = new Login(\"rohit\",\"\",\"admin\");\n\n  onSubmit(){\n    console.log(\"submited\")\n  }\n  \n}\n","<div class=\"container\">\n    <br>\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">Template Driven Form</div>\n        <div class=\"panel-body\">\n            <form #login=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"firstName\"> User Name </label>\n                    <input type=\"text\" class=\"form-control\"\n                    [(ngModel)]=\"model.userName\"\n                    name=\"userName\"\n                    id=\"userName\"\n                    #userName=\"ngModel\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\"> Password </label>\n                    <input type=\"password\" class=\"form-control\" \n                    [(ngModel)]=\"model.password\"\n                    name=\"password\"\n                    id=\"password\"\n                    #password=\"ngModel\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"userType\"> User Type </label>\n                    <select class=\"form-control\" id=\"userType\" required \n                        [(ngModel)]=\"model.userType\"\n                        name=\"userType\"\n                        #userType=\"ngModel\">\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"user\">User</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\"> Submit </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    {{model | json}}\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModelDrivenComponent } from './components/model-driven/model-driven.component';\nimport { TemplateDrivenComponent } from './components/template-driven/template-driven.component';\n\nconst routes: Routes = [\n  { path: \"model\", component: ModelDrivenComponent },\n  { path: \"template\", component: TemplateDrivenComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}