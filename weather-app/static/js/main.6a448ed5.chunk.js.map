{"version":3,"sources":["Context/index.js","settings.js","Util/temperature.js","Store/weatherStore.js","Components/Loading/index.js","Components/Error/index.js","Components/Weather/Slider/index.js","Util/icon.js","Components/Weather/Card/index.js","Components/Slider/index.js","Components/Graph/weatherTooltip.js","Util/date.js","Components/Graph/index.js","Components/Unitselector/index.js","Pages/Weather.js","App.js","index.js"],"names":["GlobalContext","React","createContext","slideSettings","arrows","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","TemperatureUnits","Fahrenheit","Celsius","kelvinConverter","kelvin","convertTo","Math","ceil","convertKelvinToFahrenheit","convertKelvinToCelsius","getUnits","unit","WeatherStore","Units","report","loading","isError","errorMessage","selectedDay","graphDataset","city","currentSildeIndex","makeAutoObservable","this","length","setSelectedDay","value","index","label","max","min","map","e","push","hour","main","temp_max","temp_min","labels","datasets","data","backgroundColor","axios","get","then","res","modify","disableLoading","catch","response","Map","list","dt","dt_txt","split","key","currentAvgTemp","has","avgTemp","substr","lastIndexOf","set","Array","from","date","Loading","id","Skeleton","variant","width","height","Error","className","Alert","severity","AutoPlaySwipeableViews","autoPlay","SwipeableViews","useStyles","makeStyles","text","textAlign","color","margin","marginTop","SlideClouds","theme","useTheme","activeStep","setActiveStep","classes","Box","sx","maxWidth","flexGrow","axis","direction","onChangeIndex","step","enableMouseEvents","abs","component","overflow","src","code","weather","icon","alt","Typography","gutterBottom","description","cardSelect","background","border","borderRadius","boxShadow","maxHeight","padding","card","img","position","top","transform","Item","styled","typography","body2","spacing","palette","secondary","WeatherCard","props","showGraph","Card","onClick","CardContent","Stack","divider","Divider","orientation","flexItem","name","random","SliderComponent","children","externalTooltipHandler","context","rawData","chart","tooltip","tooltipEl","canvas","parentNode","querySelector","document","createElement","style","opacity","pointerEvents","transition","table","appendChild","getOrCreateTooltip","body","titleLines","title","dataIndex","dataPoints","bodyLines","b","lines","humidity","pressure","sea_level","tableHead","forEach","tr","borderWidth","th","createTextNode","tableBody","i","labelColors","td","fontSize","tableRoot","firstChild","remove","positionX","offsetLeft","positionY","offsetTop","left","caretX","caretY","font","options","bodyFont","string","months","WeatherGraph","array","handleIndexClick","toJS","scales","y","ticks","beginAtZero","plugins","display","epoc","Date","setUTCSeconds","getFullYear","getMonth","getDate","epocToDate","legend","enabled","external","StyledToggleButtonGroup","ToggleButtonGroup","shape","Unitselectore","handleUnitChange","size","exclusive","onChange","Object","entries","ToggleButton","iconCenter","observer","store","useContext","weatherStore","useState","setUnit","useEffect","fetchWeatherReport","Unitselector","event","target","Container","App","Fragment","CssBaseline","AppBar","Toolbar","noWrap","xs","sm","fixed","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.6a448ed5.chunk.js","sourcesContent":["import React from 'react';\n\nconst GlobalContext = React.createContext();\n\nexport default GlobalContext;\n","export const slideSettings = {\n  arrows: true,\n  infinite: false,\n  speed: 1000,\n  slidesToShow: 3,\n  slidesToScroll: 3,\n  initialSlide: 0,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        speed: 500,\n        infinite: false,\n      },\n    },\n    {\n      breakpoint: 900,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        initialSlide: 0,\n        infinite: false,\n      },\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        infinite: false,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n      },\n    },\n  ],\n};\n\nexport const apiURL =\n  'https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=40';\n\nexport const apiURL2 = '/data.json';\n","export const TemperatureUnits = {\n  Fahrenheit: 'F',\n  Celsius: 'C',\n};\n\nexport function convertKelvinToFahrenheit(kelvin) {\n  if (undefined || null) {\n    return null;\n  }\n  return Math.ceil(((kelvin - 273.15) * 9) / 5 + 32);\n}\n\nexport function convertKelvinToCelsius(kelvin) {\n  if (undefined || null) {\n    return null;\n  }\n  return Math.ceil(kelvin - 273.15);\n}\n\nexport function kelvinConverter(kelvin, convertTo) {\n  switch (convertTo) {\n    case TemperatureUnits.Fahrenheit:\n      return convertKelvinToFahrenheit(kelvin);\n    case TemperatureUnits.Celsius:\n      return convertKelvinToCelsius(kelvin);\n    default:\n      return kelvin;\n  }\n}\n\nexport function getUnits(unit) {\n  switch (unit) {\n    case TemperatureUnits.Fahrenheit:\n      return '°F';\n    case TemperatureUnits.Celsius:\n      return '°C';\n    default:\n      return unit;\n  }\n}\n","import { makeAutoObservable } from 'mobx';\nimport axios from 'axios';\nimport { apiURL2, apiURL } from '../settings';\nimport {\n  TemperatureUnits as Units,\n  kelvinConverter,\n} from '../Util/temperature';\n\nclass WeatherStore {\n  unit = Units.Celsius;\n  report = [];\n  loading = false;\n  isError = false;\n  errorMessage = 'There was an error while fetching report!';\n  selectedDay = [];\n  graphDataset = [];\n  city = {};\n  currentSildeIndex = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setUnit(unit) {\n    this.unit = unit;\n    this.selectedDay.length &&\n      this.setSelectedDay(this.selectedDay, this.currentSildeIndex);\n  }\n\n  setSelectedDay(value, index) {\n    this.selectedDay = value;\n    this.currentSildeIndex = index;\n    const label = [];\n    const max = [];\n    const min = [];\n    value.map((e) => {\n      label.push(e.hour);\n      max.push(kelvinConverter(e.main.temp_max, this.unit));\n      min.push(kelvinConverter(e.main.temp_min, this.unit));\n    });\n    this.graphDataset = {\n      labels: label,\n      datasets: [\n        { label: 'max', data: max, backgroundColor: 'green' },\n        { label: 'min', data: min, backgroundColor: 'orange' },\n      ],\n    };\n  }\n  \n  disableLoading() {\n    this.loading = false;\n  }\n\n  fetchWeatherReport() {\n    this.loading = true;\n    this.isError = false;\n    this.errorMessage = '';\n    axios\n      .get(apiURL)\n      .then((res) => {\n        this.city = res.data.city;\n        this.modify(res.data);\n        this.disableLoading();\n      })\n      .catch(() => {\n        this.isError = true;\n        this.disableLoading();\n        this.errorMessage =\n          'There was a error while fetching data. Please click refresh to try again';\n      });\n  }\n\n  modify(response) {\n    let map = new Map();\n\n    response.list.map((report) => {\n      const { dt, main, dt_txt } = report;\n      const { temp_max, temp_min } = main;\n      const [key, hour] = dt_txt.split(' ');\n\n      let currentAvgTemp = (temp_max + temp_min) / 2;\n\n      let list = [];\n\n      if (map.has(key)) {\n        let value = map.get(key);\n        list = value.data;\n        currentAvgTemp = (currentAvgTemp + value.avgTemp) / 2;\n      }\n\n      report.hour = hour.substr(0, hour.lastIndexOf(':'));\n\n      list.push(report);\n\n      map.set(key, { avgTemp: currentAvgTemp, data: list });\n    });\n\n    this.report = Array.from(map, ([date, value]) => ({date, value}));\n\n    this.setSelectedDay(this.report[0].value.data, 0);\n  }\n}\n\nexport default WeatherStore;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { slideSettings } from '../../settings';\nimport Skeleton from '@mui/material/Skeleton';\n\nexport default function Loading() {\n  const set = { ...slideSettings, arrows: false };\n  return (\n    <div>\n      <br />\n      <Slider {...set} id=\"skeleton\">\n        <div>\n          <Skeleton variant=\"rectangular\" width={'95%'} height={118} />\n          <Skeleton width=\"95%\" />\n          <Skeleton width=\"60%\" />\n        </div>\n        <div>\n          <Skeleton variant=\"rectangular\" width={'95%'} height={118} />\n          <Skeleton width=\"95%\" />\n          <Skeleton width=\"60%\" />\n        </div>\n        <div>\n          <Skeleton variant=\"rectangular\" width={'95%'} height={118} />\n          <Skeleton width=\"95%\" />\n          <Skeleton width=\"60%\" />\n        </div>\n      </Slider>\n    </div>\n  );\n}\n","import React from 'react';\nimport Alert from '@mui/material/Alert';\nimport './style.css';\n\nexport default function Error({ errorMessage }) {\n  return (\n    <div className=\"container\">\n      <div className=\"vertical-center\">\n        <Alert className=\"child\" severity=\"error\">\n          {errorMessage }</Alert>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { getIcon } from '../../../Util/icon';\nimport { makeStyles } from '@mui/styles';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles({\n  text: {\n    textAlign: 'left',\n    color: 'white',\n    margin: 0,\n    marginTop: '-10px',\n  },\n});\n\nfunction SlideClouds({ value }) {\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const classes = useStyles();\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <Box sx={{ maxWidth: 400, flexGrow: 1 }}>\n      <AutoPlaySwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {value.data.map((step, index) => (\n          <div key={index}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <Box\n                component=\"img\"\n                sx={{\n                  overflow: 'hidden',\n                  width: '90px',\n                  height: '90px',\n                  margin: 'auto',\n                  marginTop: '-15px'\n                }}\n                src={getIcon(step.weather[0].icon)}\n                alt={step.label}\n              />\n            ) : null}\n            <Typography\n              variant=\"p\"\n              component=\"h6\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {step.hour + ' ' + step.weather[0].description}\n            </Typography>\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n    </Box>\n  );\n}\n\nexport default SlideClouds;\n","const baseUrl = 'https://openweathermap.org/img/wn/';\nexport function getIcon(code) {\n  return baseUrl + code + '@4x.png';\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\nimport Divider from '@mui/material/Divider';\nimport { makeStyles } from '@mui/styles';\nimport SlideClouds from '../Slider/';\n\nconst useStyles = makeStyles({\n  cardSelect: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: '5px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: '100%',\n    maxHeight: '150px',\n    padding: '0 10px',\n  },\n  card: {\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: '5px',\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: '100%',\n    maxHeight: '150px',\n    padding: '0 10px',\n  },\n  img: {\n    margin: 0,\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n  },\n  text: {\n    textAlign: 'left',\n    color: 'white',\n  },\n});\nconst Item = styled(Box)(({ theme }) => ({\n  ...theme.typography.body2,\n  width: '50%',\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function WeatherCard(props) {\n  const {\n    avgTemp,\n    date,\n    showGraph,\n    value,\n    unit,\n    city,\n    index,\n    currentSildeIndex,\n  } = props;\n  const classes = useStyles();\n  return (\n    <Card\n      key={Math.random()}\n      sx={{ margin: 1 }}\n      className={\n        currentSildeIndex === index ? classes.cardSelect : classes.card\n      }\n      onClick={() => {\n        showGraph(value, index);\n      }}\n    >\n      <CardContent>\n        <Stack\n          direction=\"row\"\n          divider={<Divider orientation=\"vertical\" flexItem />}\n          spacing={2}\n        >\n          <Item key={0}>\n            <Typography\n              key={1}\n              variant=\"h4\"\n              component=\"h4\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {avgTemp}°{unit}\n            </Typography>\n            <Typography\n              key={2}\n              variant=\"p\"\n              component=\"h5\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {city.name}\n            </Typography>\n            <Typography\n              key={3}\n              variant=\"p\"\n              component=\"h5\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n            >\n              {date}\n            </Typography>\n          </Item>\n\n          <Item key={1}>\n            <SlideClouds value={value} />\n          </Item>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { slideSettings } from '../../settings';\n\nfunction SliderComponent(props){\nreturn <Slider {...slideSettings}>{props.children}</Slider>\n}\n\nexport default SliderComponent","const getOrCreateTooltip = (chart) => {\n  let tooltipEl = chart.canvas.parentNode.querySelector('div');\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement('div');\n    tooltipEl.style.background = 'rgba(0, 0, 0, 0.7)';\n    tooltipEl.style.borderRadius = '3px';\n    tooltipEl.style.color = 'white';\n    tooltipEl.style.opacity = 1;\n    tooltipEl.style.pointerEvents = 'none';\n    tooltipEl.style.position = 'absolute';\n    tooltipEl.style.transform = 'translate(-50%, 0)';\n    tooltipEl.style.transition = 'all .1s ease';\n\n    const table = document.createElement('table');\n    table.style.margin = '0px';\n\n    tooltipEl.appendChild(table);\n    chart.canvas.parentNode.appendChild(tooltipEl);\n  }\n\n  return tooltipEl;\n};\n\nexport const externalTooltipHandler = (context, unit, rawData) => {\n  // Tooltip Element\n  const { chart, tooltip } = context;\n  const tooltipEl = getOrCreateTooltip(chart);\n\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  if (tooltip.body) {\n    const titleLines = tooltip.title || [];\n    const dataIndex = tooltip.dataPoints[0].dataIndex;\n\n    const bodyLines = tooltip.body.map((b) => b.lines + ' °' + unit);\n\n    const { humidity, pressure, sea_level } = rawData[dataIndex].main;\n\n    bodyLines.push(['Humidity: ' + humidity]);\n\n    bodyLines.push(['Pressure: ' + pressure]);\n\n    bodyLines.push(['Sealevel: ' + sea_level]);\n\n    const tableHead = document.createElement('thead');\n\n    titleLines.forEach((title) => {\n      const tr = document.createElement('tr');\n      tr.style.borderWidth = 0;\n      tr.style.color = 'white';\n\n      const th = document.createElement('th');\n      th.style.borderWidth = 0;\n      th.style.textAlign = 'left';\n      const text = document.createTextNode(title);\n\n      th.appendChild(text);\n      tr.appendChild(th);\n      tableHead.appendChild(tr);\n    });\n\n    const tableBody = document.createElement('tbody');\n    bodyLines.forEach((body, i) => {\n      const colors = tooltip.labelColors[i] || null;\n\n      const tr = document.createElement('tr');\n      tr.style.backgroundColor = 'inherit';\n      tr.style.borderWidth = 0;\n\n      const td = document.createElement('td');\n      td.style.borderWidth = 0;\n      td.style.fontSize = 'small';\n      td.style.color = 'white';\n\n      const text = document.createTextNode(body);\n\n      td.appendChild(text);\n      tr.appendChild(td);\n      tableBody.appendChild(tr);\n    });\n\n    const tableRoot = tooltipEl.querySelector('table');\n\n    // Remove old children\n    while (tableRoot.firstChild) {\n      tableRoot.firstChild.remove();\n    }\n\n    // Add new children\n    tableRoot.appendChild(tableHead);\n    tableRoot.appendChild(tableBody);\n  }\n\n  const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.left = positionX + tooltip.caretX + 'px';\n  tooltipEl.style.top = positionY + tooltip.caretY + 'px';\n  tooltipEl.style.font = tooltip.options.bodyFont.string;\n  tooltipEl.style.padding =\n    tooltip.options.padding + 'px ' + tooltip.options.padding + 'px';\n};\n","const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport function epocToDate(epoc) {\n  if (!epoc) return null;\n  const date = new Date(0);\n  date.setUTCSeconds(epoc);\n  return (\n    date.getFullYear() + ' ' + months[date.getMonth()] + ' ' + date.getDate()\n  );\n}\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { toJS } from 'mobx';\nimport { externalTooltipHandler } from './weatherTooltip';\nimport { epocToDate } from '../../Util/date';\n\nconst WeatherGraph = ({ data, handleIndexClick, rawData: array, unit }) => {\n  const rawData = toJS(array);\n\n  const externalTooltipHandlerWrapper = (context) => {\n    externalTooltipHandler(context, unit, rawData);\n  };\n\n  const date = epocToDate(rawData[0]?.dt) || null;\n\n  const options = {\n    scales: {\n      y: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Hourly weather breakdown for ' + date,\n      },\n      legend: {\n        position: 'bottom',\n      },\n      tooltip: {\n        enabled: false,\n        position: 'nearest',\n        external: externalTooltipHandlerWrapper,\n        unit: unit,\n        rawData: rawData,\n      },\n    },\n  };\n  return <Bar data={data} options={options} />;\n};\n\nexport default WeatherGraph;\n","import ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { TemperatureUnits as Units, getUnits } from '../../Util/temperature';\nimport { styled } from '@mui/material/styles';\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n    '& .MuiToggleButtonGroup-grouped': {\n        margin: theme.spacing(0.1),\n        border: 0,\n        '&.Mui-disabled': {\n            border: 0,\n        },\n        '&:not(:first-of-type)': {\n            borderRadius: theme.shape.borderRadius,\n        },\n        '&:first-of-type': {\n            borderRadius: theme.shape.borderRadius,\n        },\n    },\n}));\n\nfunction Unitselectore({ unit, handleUnitChange }) {\n    return (<StyledToggleButtonGroup\n        size=\"small\"\n        value={unit}\n        exclusive\n        onChange={(e) => handleUnitChange(e)}\n        aria-label=\"Temperature\"\n    >\n        <ToggleButtonGroup\n            color=\"primary\"\n            value={unit}\n            exclusive\n            onChange={(e) => handleUnitChange(e)}\n        >\n            {Object.entries(Units).map(([key, value]) => (\n                <ToggleButton value={value} key={key}>\n                    {getUnits(value)}\n                </ToggleButton>\n            ))}\n        </ToggleButtonGroup>\n    </StyledToggleButtonGroup>)\n}\n\nexport default Unitselectore;","import React, { useEffect } from 'react';\nimport GlobalContext from '../Context/';\nimport { observer } from 'mobx-react-lite';\nimport Loading from '../Components/Loading';\nimport Error from '../Components/Error';\nimport WeatherCard from '../Components/Weather/Card';\nimport Slider from '../Components/Slider';\nimport { kelvinConverter } from '../Util/temperature';\nimport { toJS } from 'mobx';\nimport { TemperatureUnits as Units, getUnits } from '../Util/temperature';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { makeStyles } from '@mui/styles';\nimport WeatherGraph from '../Components/Graph/';\nimport Unitselectore from '../Components/Unitselector/';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\n\nconst useStyles = makeStyles({\n  icon: {\n    position: 'relative',\n    top: '50%',\n    transform: 'translateY(35%)',\n  },\n  iconCenter: {\n    margin: 'auto',\n    width: '100%',\n  }\n});\n\nfunction Weather() {\n  const { weatherStore: store } = React.useContext(GlobalContext);\n  const [unit, setUnit] = React.useState(store.unit || Units.Fahrenheit);\n\n  const handleUnitChange = (event) => {\n    setUnit(event.target.value);\n    store.setUnit(event.target.value);\n  };\n  const classes = useStyles();\n\n  useEffect(() => store.fetchWeatherReport(), []);\n\n  if (store.loading) return <Loading />;\n\n  if (store.isError) return (<><Error errorMessage={store.errorMessage} />  <RefreshIcon\n    className={classes.icon+\" \"+classes.iconCenter}\n    onClick={() => {\n      store.fetchWeatherReport();\n    }}\n  /> </>)\n\n  const showGraph = (value, index) => store.setSelectedDay(value.data, index);\n\n\n\n  return (\n    <>\n      <Slider id=\"slide\">\n        {store.report.length > 0 &&\n          toJS(store.report).map(({ date, value }, index) => (\n            <WeatherCard\n              key={index}\n              avgTemp={kelvinConverter(value.avgTemp, store.unit)}\n              date={date}\n              unit={unit}\n              value={value}\n              city={store.city}\n              index={index}\n              currentSildeIndex={store.currentSildeIndex}\n              showGraph={showGraph}\n            />\n          ))}\n      </Slider>\n      <Stack direction=\"row\" spacing={2}>\n        <Unitselectore\n          unit={unit}\n          handleUnitChange={handleUnitChange} />\n        <RefreshIcon\n          className={classes.icon}\n          onClick={() => {\n            store.fetchWeatherReport();\n          }}\n        />\n      </Stack>\n      <Container maxWidth=\"md\">\n        <WeatherGraph\n          data={store.graphDataset}\n          rawData={store.selectedDay}\n          unit={store.unit}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default observer(Weather);\n","import React from 'react';\nimport Weather from './Pages/Weather';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport './style.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\">\n      <Toolbar>\n      <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'block', sm: 'block' } }}\n          >\n            Weather App\n          </Typography>\n      </Toolbar>\n      </AppBar>\n      <br/>\n      <Container fixed>\n        <Box>\n          <Weather />\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalContext from './Context/';\nimport WeatherStore from './Store/weatherStore';\nimport App from './App';\n\nconst weatherStore = new WeatherStore();\n\nReactDOM.render(\n  <GlobalContext.Provider value={{ weatherStore: weatherStore }}>\n    <App />\n  </GlobalContext.Provider>,\n  document.body\n);\n"],"sourceRoot":""}