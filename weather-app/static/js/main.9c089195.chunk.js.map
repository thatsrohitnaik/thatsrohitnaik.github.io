{"version":3,"sources":["Context/index.js","settings.js","Util/temperature.js","Store/weatherStore.js","Components/Loading/index.js","Components/Error/index.js","Components/Weather/Slider/index.js","Util/icon.js","Components/Weather/Card/index.js","Components/Slider/index.js","Components/Graph/weatherTooltip.js","Util/date.js","Components/Graph/index.js","Pages/Weather.js","App.js","index.js"],"names":["GlobalContext","React","createContext","slideSettings","arrows","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","TemperatureUnits","Fahrenheit","Celsius","kelvinConverter","kelvin","convertTo","Math","ceil","convertKelvinToFahrenheit","convertKelvinToCelsius","getUnits","unit","WeatherStore","Units","report","loading","isError","errorMessage","selectedDay","graphDataset","city","currentSildeIndex","makeAutoObservable","this","length","setSelectedDay","value","index","label","max","min","map","e","push","hour","main","temp_max","temp_min","labels","datasets","data","backgroundColor","axios","get","then","res","modify","disableLoading","catch","console","error","response","Map","list","dt","dt_txt","split","key","currentAvgTemp","has","avgTemp","substr","lastIndexOf","set","Array","from","date","Loading","id","Skeleton","variant","width","height","AutoPlaySwipeableViews","autoPlay","SwipeableViews","useStyles","makeStyles","text","textAlign","color","margin","marginTop","SlideClouds","theme","useTheme","activeStep","setActiveStep","classes","Box","sx","maxWidth","flexGrow","axis","direction","onChangeIndex","step","enableMouseEvents","abs","component","overflow","src","code","weather","icon","alt","Typography","className","gutterBottom","description","cardSelect","background","border","borderRadius","boxShadow","maxHeight","padding","card","img","position","top","transform","Item","styled","typography","body2","spacing","palette","secondary","WeatherCard","props","showGraph","Card","onClick","CardContent","Stack","divider","Divider","orientation","flexItem","name","random","SliderComponent","children","externalTooltipHandler","context","rawData","chart","tooltip","tooltipEl","canvas","parentNode","querySelector","document","createElement","style","opacity","pointerEvents","transition","table","appendChild","getOrCreateTooltip","body","titleLines","title","dataIndex","dataPoints","bodyLines","b","lines","humidity","pressure","sea_level","tableHead","forEach","tr","borderWidth","th","createTextNode","tableBody","i","labelColors","td","fontSize","tableRoot","firstChild","remove","positionX","offsetLeft","positionY","offsetTop","left","caretX","caretY","font","options","bodyFont","string","months","WeatherGraph","array","handleIndexClick","toJS","scales","y","ticks","beginAtZero","plugins","display","epoc","Date","setUTCSeconds","getFullYear","getMonth","getDate","epocToDate","legend","enabled","external","StyledToggleButtonGroup","ToggleButtonGroup","shape","observer","store","useContext","weatherStore","useState","setUnit","handleChange","event","target","useEffect","fetchWeatherReport","message","Grid","container","item","xs","size","exclusive","onChange","Object","entries","ToggleButton","md","columns","sm","App","Fragment","CssBaseline","Container","fixed","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.9c089195.chunk.js","sourcesContent":["import React from 'react';\n\nconst GlobalContext = React.createContext();\n\nexport default GlobalContext;\n","export const slideSettings = {\n  arrows: true,\n  infinite: false,\n  speed: 1000,\n  slidesToShow: 3,\n  slidesToScroll: 3,\n  initialSlide: 0,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        speed: 500,\n        infinite: false,\n      },\n    },\n    {\n      breakpoint: 900,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        initialSlide: 0,\n        infinite: false,\n      },\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        infinite: false,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n      },\n    },\n  ],\n};\n\nexport const apiURL =\n  'http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=40';\n\nexport const apiURL2 = '/data.json';\n","export const TemperatureUnits = {\n  Fahrenheit: 'F',\n  Celsius: 'C',\n};\n\nexport function convertKelvinToFahrenheit(kelvin) {\n  if (undefined || null) {\n    return null;\n  }\n  return Math.ceil(((kelvin - 273.15) * 9) / 5 + 32);\n}\n\nexport function convertKelvinToCelsius(kelvin) {\n  if (undefined || null) {\n    return null;\n  }\n  return Math.ceil(kelvin - 273.15);\n}\n\nexport function kelvinConverter(kelvin, convertTo) {\n  switch (convertTo) {\n    case TemperatureUnits.Fahrenheit:\n      return convertKelvinToFahrenheit(kelvin);\n    case TemperatureUnits.Celsius:\n      return convertKelvinToCelsius(kelvin);\n    default:\n      return kelvin;\n  }\n}\n\nexport function getUnits(unit) {\n  switch (unit) {\n    case TemperatureUnits.Fahrenheit:\n      return '°F';\n    case TemperatureUnits.Celsius:\n      return '°C';\n    default:\n      return unit;\n  }\n}\n","import { makeAutoObservable } from 'mobx';\nimport axios from 'axios';\nimport { apiURL2, apiURL } from '../settings';\nimport {\n  TemperatureUnits as Units,\n  kelvinConverter,\n} from '../Util/temperature';\n\nclass WeatherStore {\n  unit = Units.Celsius;\n  report = [];\n  loading = false;\n  isError = false;\n  errorMessage = '';\n  selectedDay = [];\n  graphDataset = [];\n  city = {};\n  currentSildeIndex = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setUnit(unit) {\n    this.unit = unit;\n    this.selectedDay.length &&\n      this.setSelectedDay(this.selectedDay, this.currentSildeIndex);\n  }\n\n  setSelectedDay(value, index) {\n    this.selectedDay = value;\n    this.currentSildeIndex = index;\n    const label = [];\n    const max = [];\n    const min = [];\n    value.map((e) => {\n      label.push(e.hour);\n      max.push(kelvinConverter(e.main.temp_max, this.unit));\n      min.push(kelvinConverter(e.main.temp_min, this.unit));\n    });\n    this.graphDataset = {\n      labels: label,\n      datasets: [\n        { label: 'max', data: max, backgroundColor: 'green' },\n        { label: 'min', data: min, backgroundColor: 'orange' },\n      ],\n    };\n  }\n  disableLoading(){\n    this.loading = false;\n  }\n  fetchWeatherReport() {\n    this.loading = true;\n    this.isError = false;\n    this.errorMessage = '';\n    axios\n      .get(apiURL2)\n      .then((res) => {\n        this.city = res.data.city;\n        this.modify(res.data);\n        this.disableLoading();\n      })\n      .catch(() => {\n        console.error(\"hey error\")\n        this.isError = true;\n        this.errorMessage =\n          'There was a error while fetching data. Please click refresh to try again';\n      });\n  }\n\n  modify(response) {\n    let map = new Map();\n\n    response.list.map((report) => {\n      const { dt, main, dt_txt } = report;\n      const { temp_max, temp_min } = main;\n      const [key, hour] = dt_txt.split(' ');\n\n      let currentAvgTemp = (temp_max + temp_min) / 2;\n\n      let list = [];\n\n      if (map.has(key)) {\n        let value = map.get(key);\n        list = value.data;\n        currentAvgTemp = (currentAvgTemp + value.avgTemp) / 2;\n      }\n\n      report.hour = hour.substr(0, hour.lastIndexOf(':'));\n\n      list.push(report);\n\n      map.set(key, { avgTemp: currentAvgTemp, data: list });\n    });\n\n    this.report = Array.from(map, ([date, value]) => ({\n      date,\n      value,\n    }));\n\n    this.setSelectedDay(this.report[0].value.data, 0);\n  }\n}\n\nexport default WeatherStore;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { slideSettings } from '../../settings';\nimport Skeleton from '@mui/material/Skeleton';\n\nexport default function Loading() {\n  const set = { ...slideSettings, arrows: false };\n  return (\n    <div>\n      <br />\n      <Slider {...set} id=\"skeleton\">\n        <div>\n          <Skeleton variant=\"rectangular\" width={'95%'} height={118} />\n          <Skeleton width=\"95%\" />\n          <Skeleton width=\"60%\" />\n        </div>\n        <div>\n          <Skeleton variant=\"rectangular\" width={'95%'} height={118} />\n          <Skeleton width=\"95%\" />\n          <Skeleton width=\"60%\" />\n        </div>\n        <div>\n          <Skeleton variant=\"rectangular\" width={'95%'} height={118} />\n          <Skeleton width=\"95%\" />\n          <Skeleton width=\"60%\" />\n        </div>\n      </Slider>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Loading({ errorMessage }) {\n  return <div>{errorMessage}</div>;\n}\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { getIcon } from '../../../Util/icon';\nimport { makeStyles } from '@mui/styles';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles({\n  text: {\n    textAlign: 'left',\n    color: 'white',\n    margin: 0,\n    marginTop: '-10px',\n  },\n});\n\nfunction SlideClouds({ value }) {\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const classes = useStyles();\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <Box sx={{ maxWidth: 400, flexGrow: 1 }}>\n      <AutoPlaySwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {value.data.map((step, index) => (\n          <div key={index}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <Box\n                component=\"img\"\n                sx={{\n                  overflow: 'hidden',\n                  width: '90px',\n                  height: '90px',\n                }}\n                src={getIcon(step.weather[0].icon)}\n                alt={step.label}\n              />\n            ) : null}\n            <Typography\n              variant=\"p\"\n              component=\"h6\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {step.hour + ' ' + step.weather[0].description}\n            </Typography>\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n    </Box>\n  );\n}\n\nexport default SlideClouds;\n","const baseUrl = 'https://openweathermap.org/img/wn/';\nexport function getIcon(code) {\n  return baseUrl + code + '@4x.png';\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\nimport Divider from '@mui/material/Divider';\nimport { makeStyles } from '@mui/styles';\nimport SlideClouds from '../Slider/';\n\nconst useStyles = makeStyles({\n  cardSelect: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: '5px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: '100%',\n    maxHeight: '150px',\n    padding: '0 10px',\n  },\n  card: {\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: '5px',\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: '100%',\n    maxHeight: '150px',\n    padding: '0 10px',\n  },\n  img: {\n    margin: 0,\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n  },\n  text: {\n    textAlign: 'left',\n    color: 'white',\n  },\n});\nconst Item = styled(Box)(({ theme }) => ({\n  ...theme.typography.body2,\n  width: '50%',\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function WeatherCard(props) {\n  const {\n    avgTemp,\n    date,\n    showGraph,\n    value,\n    unit,\n    city,\n    index,\n    currentSildeIndex,\n  } = props;\n  const classes = useStyles();\n  return (\n    <Card\n      key={Math.random()}\n      sx={{ margin: 1 }}\n      className={\n        currentSildeIndex === index ? classes.cardSelect : classes.card\n      }\n      onClick={() => {\n        showGraph(value, index);\n      }}\n    >\n      <CardContent>\n        <Stack\n          direction=\"row\"\n          divider={<Divider orientation=\"vertical\" flexItem />}\n          spacing={2}\n        >\n          <Item key={0}>\n            <Typography\n              key={1}\n              variant=\"h4\"\n              component=\"h4\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {avgTemp}°{unit}\n            </Typography>\n            <Typography\n              key={2}\n              variant=\"p\"\n              component=\"h5\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {city.name}\n            </Typography>\n            <Typography\n              key={3}\n              variant=\"p\"\n              component=\"h5\"\n              className={classes.text}\n              // sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n            >\n              {date}\n            </Typography>\n          </Item>\n\n          <Item key={1}>\n            <SlideClouds value={value} />\n          </Item>\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { slideSettings } from '../../settings';\n\nfunction SliderComponent(props){\nreturn <Slider {...slideSettings}>{props.children}</Slider>\n}\n\nexport default SliderComponent","const getOrCreateTooltip = (chart) => {\n  let tooltipEl = chart.canvas.parentNode.querySelector('div');\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement('div');\n    tooltipEl.style.background = 'rgba(0, 0, 0, 0.7)';\n    tooltipEl.style.borderRadius = '3px';\n    tooltipEl.style.color = 'white';\n    tooltipEl.style.opacity = 1;\n    tooltipEl.style.pointerEvents = 'none';\n    tooltipEl.style.position = 'absolute';\n    tooltipEl.style.transform = 'translate(-50%, 0)';\n    tooltipEl.style.transition = 'all .1s ease';\n\n    const table = document.createElement('table');\n    table.style.margin = '0px';\n\n    tooltipEl.appendChild(table);\n    chart.canvas.parentNode.appendChild(tooltipEl);\n  }\n\n  return tooltipEl;\n};\n\nexport const externalTooltipHandler = (context, unit, rawData) => {\n  // Tooltip Element\n  const { chart, tooltip } = context;\n  const tooltipEl = getOrCreateTooltip(chart);\n\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  if (tooltip.body) {\n    const titleLines = tooltip.title || [];\n    const dataIndex = tooltip.dataPoints[0].dataIndex;\n\n    const bodyLines = tooltip.body.map((b) => b.lines + ' °' + unit);\n\n    const { humidity, pressure, sea_level } = rawData[dataIndex].main;\n\n    bodyLines.push(['Humidity: ' + humidity]);\n\n    bodyLines.push(['Pressure: ' + pressure]);\n\n    bodyLines.push(['Sealevel: ' + sea_level]);\n\n    const tableHead = document.createElement('thead');\n\n    titleLines.forEach((title) => {\n      const tr = document.createElement('tr');\n      tr.style.borderWidth = 0;\n\n      const th = document.createElement('th');\n      th.style.borderWidth = 0;\n      th.style.textAlign = 'left';\n      const text = document.createTextNode(title);\n\n      th.appendChild(text);\n      tr.appendChild(th);\n      tableHead.appendChild(tr);\n    });\n\n    const tableBody = document.createElement('tbody');\n    bodyLines.forEach((body, i) => {\n      const colors = tooltip.labelColors[i] || null;\n\n      const tr = document.createElement('tr');\n      tr.style.backgroundColor = 'inherit';\n      tr.style.borderWidth = 0;\n\n      const td = document.createElement('td');\n      td.style.borderWidth = 0;\n      td.style.fontSize = 'small';\n\n      const text = document.createTextNode(body);\n\n      td.appendChild(text);\n      tr.appendChild(td);\n      tableBody.appendChild(tr);\n    });\n\n    const tableRoot = tooltipEl.querySelector('table');\n\n    // Remove old children\n    while (tableRoot.firstChild) {\n      tableRoot.firstChild.remove();\n    }\n\n    // Add new children\n    tableRoot.appendChild(tableHead);\n    tableRoot.appendChild(tableBody);\n  }\n\n  const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.left = positionX + tooltip.caretX + 'px';\n  tooltipEl.style.top = positionY + tooltip.caretY + 'px';\n  tooltipEl.style.font = tooltip.options.bodyFont.string;\n  tooltipEl.style.padding =\n    tooltip.options.padding + 'px ' + tooltip.options.padding + 'px';\n};\n","const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport function epocToDate(epoc) {\n  if (!epoc) return null;\n  const date = new Date(0);\n  date.setUTCSeconds(epoc);\n  return (\n    date.getFullYear() + ' ' + months[date.getMonth()] + ' ' + date.getDate()\n  );\n}\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { toJS } from 'mobx';\nimport { externalTooltipHandler } from './weatherTooltip';\nimport { epocToDate } from '../../Util/date';\n\nconst WeatherGraph = ({ data, handleIndexClick, rawData: array, unit }) => {\n  const rawData = toJS(array);\n\n  const externalTooltipHandlerWrapper = (context) => {\n    externalTooltipHandler(context, unit, rawData);\n  };\n\n  const date = epocToDate(rawData[0]?.dt) || null;\n\n  const options = {\n    scales: {\n      y: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Hourly weather breakdown for ' + date,\n      },\n      legend: {\n        position: 'bottom',\n      },\n      tooltip: {\n        enabled: false,\n        position: 'nearest',\n        external: externalTooltipHandlerWrapper,\n        unit: unit,\n        rawData: rawData,\n      },\n    },\n  };\n  return <Line data={data} options={options} />;\n};\n\nexport default WeatherGraph;\n","import React, { useEffect } from 'react';\nimport GlobalContext from '../Context/';\nimport { observer } from 'mobx-react-lite';\nimport Loading from '../Components/Loading';\nimport Error from '../Components/Error';\nimport WeatherCard from '../Components/Weather/Card';\nimport Slider from '../Components/Slider';\nimport { kelvinConverter } from '../Util/temperature';\nimport { toJS } from 'mobx';\nimport { TemperatureUnits as Units, getUnits } from '../Util/temperature';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { makeStyles } from '@mui/styles';\nimport WeatherGraph from '../Components/Graph/';\n\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\n  '& .MuiToggleButtonGroup-grouped': {\n    margin: theme.spacing(0.1),\n    border: 0,\n    '&.Mui-disabled': {\n      border: 0,\n    },\n    '&:not(:first-of-type)': {\n      borderRadius: theme.shape.borderRadius,\n    },\n    '&:first-of-type': {\n      borderRadius: theme.shape.borderRadius,\n    },\n  },\n}));\n\nconst useStyles = makeStyles({\n  icon: {\n    position: 'relative',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    marginTop: -10,\n  },\n});\n\nfunction Weather() {\n  const { weatherStore: store } = React.useContext(GlobalContext);\n  const [unit, setUnit] = React.useState(store.unit || Units.Fahrenheit);\n  const [tooltipData, setTooltipData] = React.useState();\n\n  const handleChange = (event) => {\n    setUnit(event.target.value);\n    store.setUnit(event.target.value);\n  };\n  const classes = useStyles();\n\n  useEffect(() => {\n    store.fetchWeatherReport();\n  }, []);\n\n  if (store.loading) {\n    return <Loading />;\n  }\n\n  if (store.isError) {\n    return <Error message={store.errorMessage} />;\n  }\n\n  const showGraph = (value, index) => {\n    store.setSelectedDay(value.data, index);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container>\n          <Grid key={1} item xs={12}>\n            <StyledToggleButtonGroup\n              size=\"small\"\n              value={unit}\n              exclusive\n              onChange={handleChange}\n              aria-label=\"Temperature\"\n            >\n              <ToggleButtonGroup\n                color=\"primary\"\n                value={unit}\n                exclusive\n                onChange={handleChange}\n              >\n                {Object.entries(Units).map(([key, value]) => (\n                  <ToggleButton value={value} key={key}>\n                    {getUnits(value)}\n                  </ToggleButton>\n                ))}\n              </ToggleButtonGroup>\n            </StyledToggleButtonGroup>\n            <RefreshIcon\n              className={classes.icon}\n              onClick={() => {\n                store.fetchWeatherReport();\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n      <Slider id=\"slide\">\n        {store.report.length > 0 &&\n          toJS(store.report).map(({ date, value }, index) => (\n            <WeatherCard\n              key={index}\n              avgTemp={kelvinConverter(value.avgTemp, store.unit)}\n              date={date}\n              unit={unit}\n              value={value}\n              city={store.city}\n              index={index}\n              currentSildeIndex={store.currentSildeIndex}\n              showGraph={showGraph}\n            />\n          ))}\n      </Slider>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 3 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        <Grid item xs={12} sm={12} md={2}></Grid>\n\n        <Grid item xs={12} sm={12} md={8}>\n          <WeatherGraph\n            data={store.graphDataset}\n            rawData={store.selectedDay}\n            unit={store.unit}\n          />\n        </Grid>\n        <Grid item xs={12} sm={12} md={2}></Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default observer(Weather);\n","import React from 'react';\nimport Weather from './Pages/Weather';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport './style.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container fixed>\n        <Box>\n          <Weather />\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalContext from './Context/';\nimport WeatherStore from './Store/weatherStore';\nimport App from './App';\n\nconst weatherStore = new WeatherStore();\n\nReactDOM.render(\n  <GlobalContext.Provider value={{ weatherStore: weatherStore }}>\n    <App />\n  </GlobalContext.Provider>,\n  document.body\n);\n"],"sourceRoot":""}